server:
  port: 8110 # 服务端口

spring:
  profiles:
    active: dev # 环境设置
  application:
    name: service-core # 服务名
  datasource: # mysql数据库连接
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/db_kel_core?serverTimezone=GMT%2B8&characterEncoding=utf-8
    username: root
    password: itcast

  redis:
    host: 192.168.160.130
    port: 6379
    database: 0
    password:  #默认为空
    timeout: 3000ms #最大等待时间，超时则抛出异常，否则请求一直等待
    lettuce:
      pool:
        max-active: 20  #最大连接数，负值表示没有限制，默认8
        max-wait: -1    #最大阻塞等待时间，负值表示没限制，默认-1
        max-idle: 8     #最大空闲连接，默认8
        min-idle: 0

  cloud:
#    nacos:ServiceCoreApplication
    nacos:
      discovery:
        server-addr: localhost:8848 # nacos服务地址

        #  spring.servlet.multipart.max-file-size = 10MB
        #  spring.servlet.multipart.max-request-size=100MB
  #        文件上传限制
  servlet:
    multipart:
      max-file-size: 12MB
      max-request-size: 100MB






mybatis-plus: #mybatis
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:com/kimi/kel/core/mapper/xml/*.xml

# 设置日志级别
#logging:
#  level:
#    root: error


#read timed out 客户端与服务器握手成功，但是客户端没有在限定时间内返回数据给服务器 not this
#system:
#  sun:
#    net:
#      client:
#        defaultConnectTimeout: 10000ms
#        defaultReadTimeout: 10000ms

# 全局关闭Hystrix超时,对所有微服务有效
#hystrix.command.default.execution.timeout.enabled: false
# 设置ribbon超时时间
#ribbon:
#  ReadTimeout: 20000
#  ConnectTimeout: 20000


ribbon:
  #Ribbon允许最大连接数，即所有后端微服务实例请求并发数之和的最大值。
  MaxTotalConnections: 500
  #单个后端微服务实例能接收的最大请求并发数
  MaxConnectionsPerHost: 500
  ReadTimeout: 10000
  ConnectTimeout: 10000
  #懒加载有可能出现read timed out错误，配置立即加载解决

  eager-load:
    enabled: true
    clients: service-oss,service-core,service-sms,service-gateway



